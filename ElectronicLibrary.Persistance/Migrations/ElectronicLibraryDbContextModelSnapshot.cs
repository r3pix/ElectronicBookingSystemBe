// <auto-generated />
using System;
using ElectronicLibrary.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectronicLibrary.Persistance.Migrations
{
    [DbContext(typeof(ElectronicLibraryDbContext))]
    partial class ElectronicLibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("BorrowPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.BookPiece", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookPiece");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.BookPieceBorrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookPieceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BorrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookPieceId");

                    b.HasIndex("BorrowId");

                    b.ToTable("BookPieceBorrow");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Borrow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Penalty")
                        .HasColumnType("real");

                    b.Property<float>("SumBorrowPrice")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Borrow");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.DeliveryAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BorrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BorrowId")
                        .IsUnique();

                    b.ToTable("DeliveryAddress");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Identity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Identity");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LMEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.BookPiece", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.Book", "Book")
                        .WithMany("BookPieces")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.BookPieceBorrow", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.BookPiece", "BookPiece")
                        .WithMany("Borrows")
                        .HasForeignKey("BookPieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicLibrary.Persistance.Entities.Borrow", "Borrow")
                        .WithMany("Books")
                        .HasForeignKey("BorrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookPiece");

                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Borrow", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.User", "User")
                        .WithMany("Borrows")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.DeliveryAddress", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.Borrow", "Borrow")
                        .WithOne("DeliveryAddress")
                        .HasForeignKey("ElectronicLibrary.Persistance.Entities.DeliveryAddress", "BorrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Identity", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.User", "User")
                        .WithOne("Identity")
                        .HasForeignKey("ElectronicLibrary.Persistance.Entities.Identity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.User", b =>
                {
                    b.HasOne("ElectronicLibrary.Persistance.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Book", b =>
                {
                    b.Navigation("BookPieces");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.BookPiece", b =>
                {
                    b.Navigation("Borrows");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Borrow", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ElectronicLibrary.Persistance.Entities.User", b =>
                {
                    b.Navigation("Borrows");

                    b.Navigation("Identity");
                });
#pragma warning restore 612, 618
        }
    }
}
